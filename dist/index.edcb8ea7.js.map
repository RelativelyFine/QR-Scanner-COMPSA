{"mappings":"AAAA,MAAM,YAAY,OAAO,MAAM;AAE/B,MAAM,QAAQ,SAAS,aAAa,CAAC;AACrC,MAAM,gBAAgB,SAAS,cAAc,CAAC;AAC9C,MAAM,SAAS,cAAc,UAAU,CAAC;AAExC,MAAM,WAAW,SAAS,cAAc,CAAC;AACzC,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,YAAY,SAAS,cAAc,CAAC;AAC1C,MAAM,aAAa,SAAS,cAAc,CAAC;AAC3C,MAAM,QAAQ,SAAS,cAAc,CAAC;AACtC,MAAM,YAAY,SAAS,cAAc,CAAC;AAE1C,IAAI,WAAW,KAAK;AAEpB,UAAU,QAAQ,GAAG,OAAO,MAAQ;IAClC,MAAM,QAAQ;AAChB;AAEA,WAAW,OAAO,GAAG,OAAO,MAAQ;IAClC,MAAM,QAAQ;AAChB;AAEA,MAAM,UAAU,OAAO,MAAQ;IAC7B,IAAI,KAAK;QACP,WAAW,KAAK;QAEhB,MAAM,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,CAAC,QAAU;YAC7C,MAAM,IAAI;QACZ;QAEA,IAAI,IAAI,IAAI,IAAI,SACd,WAAW,SAAS,GAAG;aAClB;YACL,WAAW,SAAS,GAAG;YACvB,MAAM,iBAAiB;QACzB,CAAC;QACD,SAAS,MAAM,GAAG,KAAK;QACvB,WAAW,MAAM,GAAG,IAAI;QACxB,cAAc,MAAM,GAAG,IAAI;QAC3B,UAAU,MAAM,GAAG,KAAK;IAC1B,CAAC;AACH;AAEA,UAAU,OAAO,GAAG,IAAM;IACxB,UAAU,YAAY,CACnB,YAAY,CAAC;QAAE,OAAO;YAAE,YAAY;QAAc;IAAE,GACpD,IAAI,CAAC,SAAU,MAAM,EAAE;QACtB,WAAW,MAAM,GAAG,KAAK;QACzB,WAAW,IAAI;QACf,SAAS,MAAM,GAAG,IAAI;QACtB,UAAU,MAAM,GAAG,IAAI;QACvB,cAAc,MAAM,GAAG,KAAK;QAC5B,MAAM,YAAY,CAAC,eAAe,IAAI,GAAG,uDAAuD;QAChG,MAAM,SAAS,GAAG;QAClB,MAAM,IAAI;QACV;QACA;IACF;AACJ;AAEA,SAAS,OAAO;IACd,cAAc,MAAM,GAAG,MAAM,WAAW;IACxC,cAAc,KAAK,GAAG,MAAM,UAAU;IACtC,OAAO,SAAS,CAAC,OAAO,GAAG,GAAG,cAAc,KAAK,EAAE,cAAc,MAAM;IAEvE,YAAY,sBAAsB;AACpC;AAEA,SAAS,OAAO;IACd,IAAI;QACF,OAAO,MAAM;IACf,EAAE,OAAO,GAAG;QACV,WAAW,MAAM;IACnB;AACF;AAEA,eAAe,iBAAiB,GAAG,EAAE;IACnC,SAAS,MAAM,KAAK,KAAK,CAAC,KAAK,MAAM;IACrC,WAAW,MAAM,SAAS,cAAc,CAAC,YAAY,KAAK;IAC1D,MAAM,CAAC,0CAA0C,EAAE,OAAO,UAAU,EAAE,SAAS,CAAC;IAChF,MAAM,MAAM,KACT,IAAI,CAAC,CAAC,MAAQ;QACb,QAAQ,GAAG,CAAC;QACZ,MAAM,MAAM,GAAG,IAAI;QACnB,UAAU,SAAS,GAAG;IACxB,GACC,KAAK,CAAC,CAAC,MAAQ;QACd,QAAQ,GAAG,CAAC;QACZ,MAAM,MAAM,GAAG,KAAK;QACpB,UAAU,SAAS,GAAG;IACxB;AACJ","sources":["src/qrCodeScanner.js"],"sourcesContent":["const qrcodeBtn = window.qrcode;\n\nconst video = document.createElement(\"video\");\nconst canvasElement = document.getElementById(\"qr-canvas\");\nconst canvas = canvasElement.getContext(\"2d\");\n\nconst qrResult = document.getElementById(\"qr-result\");\nconst outputData = document.getElementById(\"outputData\");\nconst btnScanQR = document.getElementById(\"btn-scan-qr\");\nconst backButton = document.getElementById(\"backButton\");\nconst error = document.getElementById(\"error\");\nconst errorData = document.getElementById(\"errorData\");\n\nlet scanning = false;\n\nqrcodeBtn.callback = async (res) => {\n  await closeQR(res);\n};\n\nbackButton.onclick = async (res) => {\n  await closeQR(res);\n};\n\nconst closeQR = async (res) => {\n  if (res) {\n    scanning = false;\n\n    video.srcObject.getTracks().forEach((track) => {\n      track.stop();\n    });\n\n    if (res.type == \"click\") {\n      outputData.innerText = \"Scan Cancelled!\";\n    } else {\n      outputData.innerText = res;\n      await backendInterface(res);\n    }\n    qrResult.hidden = false;\n    backButton.hidden = true;\n    canvasElement.hidden = true;\n    btnScanQR.hidden = false;\n  }\n};\n\nbtnScanQR.onclick = () => {\n  navigator.mediaDevices\n    .getUserMedia({ video: { facingMode: \"environment\" } })\n    .then(function (stream) {\n      backButton.hidden = false;\n      scanning = true;\n      qrResult.hidden = true;\n      btnScanQR.hidden = true;\n      canvasElement.hidden = false;\n      video.setAttribute(\"playsinline\", true); // required to tell iOS safari we don't want fullscreen\n      video.srcObject = stream;\n      video.play();\n      tick();\n      scan();\n    });\n};\n\nfunction tick() {\n  canvasElement.height = video.videoHeight;\n  canvasElement.width = video.videoWidth;\n  canvas.drawImage(video, 0, 0, canvasElement.width, canvasElement.height);\n\n  scanning && requestAnimationFrame(tick);\n}\n\nfunction scan() {\n  try {\n    qrcode.decode();\n  } catch (e) {\n    setTimeout(scan, 300);\n  }\n}\n\nasync function backendInterface(res) {\n  net_id = await JSON.parse(res).net_id;\n  award_id = await document.getElementById(\"award-id\").value;\n  url = `https://compsa.ca/api/admin/manage?net_id=${net_id}&award_id=${award_id}`;\n  await fetch(url)\n    .then((res) => {\n      console.log(res);\n      error.hidden = true;\n      errorData.innerText = \"\";\n    })\n    .catch((err) => {\n      console.log(err);\n      error.hidden = false;\n      errorData.innerText = err;\n    });\n}\n"],"names":[],"version":3,"file":"index.edcb8ea7.js.map","sourceRoot":"/__parcel_source_root/"}